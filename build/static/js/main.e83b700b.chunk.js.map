{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Exchange","props","state","isLoaded","items","fetch","then","res","json","console","log","rates","setState","ans","message","longitude","iss_position","latitude","this","Component","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"+OAIMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,UAAU,EACVC,MAAO,IAJS,E,qDAOpB,WAAsB,IAAD,OACnBC,MAAM,2CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,EAAKG,OACjB,EAAKC,SAAS,CACZT,UAAU,EACVU,IAAKL,EAAKM,QACVC,UAAWP,EAAKQ,aAAaD,UAC7BE,SAAUT,EAAKQ,aAAaC,gB,oBAKpC,WAAW,IAAD,EACqCC,KAAKhB,MAA5CW,EADE,EACFA,IAAKV,EADH,EACGA,SAAUY,EADb,EACaA,UAAWE,EADxB,EACwBA,SAEhC,OADJR,QAAQC,IAAIQ,KAAKhB,OACRC,EAID,gCACE,+BAAKU,EAAL,OACA,uIACA,8CAAOI,KACP,8CAAOF,QAPJ,8BAAK,sD,GA1BKI,aAwCRnB,IAEfoB,iBAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,SC9C7C,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFX,SAASC,eAAe,SAM1BC,M","file":"static/js/main.e83b700b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './App.css'\n\nclass Exchange extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      items: []\n    }\n  }\n  componentDidMount () {\n    fetch('http://api.open-notify.org/iss-now.json')\n      .then(res => res.json())\n      .then(json => {\n        console.log(json.rates)\n        this.setState({\n          isLoaded: true,\n          ans: json.message,\n          longitude: json.iss_position.longitude,\n          latitude: json.iss_position.latitude\n        })\n      })\n  }\n\n  render () {\n    var { ans, isLoaded, longitude, latitude } = this.state\nconsole.log(this.state)\n    if (!isLoaded) {\n      return <div><h2>NOWSERCHIG....</h2></div>\n    } else {\n      return (\n        <div>\n          <h1>{ans}!</h1>\n          <p>現在の国際宇宙ステーションの位置は</p>\n          <p>緯度:{latitude}</p>\n          <p>経度:{longitude}</p>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Exchange\n\nrender(<Exchange />, document.getElementById('root'))\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}